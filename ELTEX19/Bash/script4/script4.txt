#!/bin/bash

error_func(){
	if [[ $err -eq  1 ]]; then
	echo "Invalid value";
	err=0;
	else
	err=0;
	fi
}

set_player(){
	player_list=$(apt list --installed 2>~/null| grep "^mpg321/\|^clementina/\|^rhythmbox/\|^amarok/\|^mplayer/" 2>~/err.out| sed "s/[/].*//g" | grep ".*");
	if [[ $player_list == "" ]]; then
		loop=1;
		music_list=($music_list);
		while [[ $loop -eq 1 ]]
		do
			clear;
			loop=0;
			echo "Chose which music player to install";
			echo "1) mpg321";
			echo "2) clementina";
			echo "3) rhythmbox";
			echo "4) amarok";
			echo "5) mplayer";
			error_func;
			read player;
			case $player in
				1) chosed_player="mpg321";;
				2) chosed_player="clementina";;
				3) chosed_player="rhythmbox";;
				4) chosed_player="amarok";;
				5) chosed_player="mplayer";;
				*) err=1;
				   loop=1;;
			esac
		done
		sudo apt install $chosed_player -y;
	else
		loop=1;
		player_list=($player_list);
		while [[ $loop -eq 1 ]]
		do
			clear;
			loop=0;
			echo "Chose music player:";
			count=1;
			for i in ${player_list[@]}
			do
				echo "$count) $i";
				((count++));
			done
			error_func;
			read numb;
			if [[ $numb -gt 0 ]] && [[ $numb -lt $count ]]; then
					chosed_player=${player_list[$numb - 1]};
					echo "Set player is $chosed_player";
					sleep 3;
				else
					err=1;
					loop=1;
			fi
		done	
	fi
}

set_music(){
	loop=1;
	while [[ $loop -eq 1 ]]
	do
		loop=0;
		clear;
		echo "Enter directory with music with format '/dir1/dir2'";
		read search_param;
		chosed_music="$search_param/";
		music_list=$(ls $search_param/ | grep -E ".mp3|.ogg");
		if [[ $music_list == "" ]]; then
			echo "In directory 'mp3' and 'ogg' files don't exist";
			sleep 4;
			loop=1;
		else
			loop_music=1;
			music_list=($music_list);
			while [[ $loop_music -eq 1 ]]
			do
				clear;
				loop_music=0;
				echo "Chose musical composition";
				count=1;
				for i in ${music_list[@]}
				do
					echo "$count) $i";
					((count++));
				done
				error_func;
				read numb;
				if [[ $numb -gt 0 ]] && [[ $numb -lt $count ]]; then
					chosed_music+="${music_list[$numb - 1]}";
					echo "Set music is $chosed_music";
					sleep 3;
				else
					err=1;
					loop_music=1;
				fi
			done	
		fi
	done
}

set_time(){
	loop=1;
	while [[ $loop -eq 1 ]]
	do
		clear;
		loop=0;
		echo -e "$set_time_title";
		echo "Time format is 'hour minute day month'";
		error_func;
		read hour minute day month;
		if [[ $hour -ge 0 ]] && [[ $hour -le 23 ]] && [[ $minute -ge 0 ]] && [[ $minute -le 59 ]] && [[ $day -ge 1 ]] && [[ $day -le 31 ]] && [[ $month -ge 1 ]] && [[ $month -le 12 ]]; then
			echo "Set time is $hour:$minute $day.$month.$(date +%G)";
			sleep 3;
		else
			err=1;
			loop=1;
		fi
	done
}

set_alarm(){
	echo "$minute $hour $day $month * DISPLAY=:0 $chosed_player $chosed_music #alarm" >> /home/amelnikov99/Documents/script4/script4log.txt; #path
}

show_alarm(){
	echo "Actual alarms:";
	sed -ne 's/ \* DISPLAY=:0 [a-z123]* [/a-zA-Z0-9_.]* #alarm//p' /home/amelnikov99/Documents/script4/script4log.txt | sed "s/\([0-9]*\) \([0-9]*\) \([0-9]*\) \([0-9]*\)/\2:\1 \3.\4.$(date +%G)/"; #path
}

remove_alarm(){
	sed -is "/$minute $hour $day $month \* DISPLAY=:0 [a-z123]* [/a-zA-Z0-9_.]* #alarm/d" /home/amelnikov99/Documents/script4/script4log.txt; #path
}

crontab /home/amelnikov99/Documents/script4/script4log.txt
err=0;
clear;
main_loop=1;
while [[ $main_loop -eq 1 ]]
do
	main_loop=0;
	clear;
	echo "Alarm";
	echo "1) Set alarm";
	echo "2) Edit alarm";
	echo "3) Show actual alarms";
	echo "4) Remove alarm";
	echo "5) Exit";
	error_func;
	read main_choice;
	case $main_choice in
	1)
		set_time_title="Set alarm";
		set_time;
		set_player;
		set_music;
		set_alarm;
		main_loop=1;
	;;
	2)
		set_time_title="Edit alarm\n$(show_alarm)\nEnter time of editable alarm";
		set_time;
		chosed_player="$(sed -ne "s/$minute $hour $day $month \* DISPLAY=:0 \([a-z123]*\) [/a-zA-Z0-9_.]* #alarm/\1/p" /home/amelnikov99/Documents/script4/script4log.txt)"; #path
		chosed_music="$(sed -ne "s/$minute $hour $day $month \* DISPLAY=:0 [a-z123]* \([/a-zA-Z0-9_.]*\) #alarm/\1/p" /home/amelnikov99/Documents/script4/script4log.txt)"; #path
		loop_edit=1;
		while [[ $loop_edit -eq 1 ]]
		do
			loop_edit=0;
			clear;
			echo "1) Change time";
			echo "2) Change player";
			echo "3) Change music";
			echo "4) Back to menu";
			error_func;
			read press;
			if [[ press -eq 1 ]]; then
				remove_alarm;
				set_time_title="Edit alarm\nEnter new time of editable alarm";
				set_time;
				set_alarm;
				loop_edit=1;
			elif [[ press -eq 2 ]]; then
				remove_alarm;
				set_player;
				set_alarm;
				loop_edit=1;
			elif [[ press -eq 3 ]]; then
				remove_alarm;
				set_music;
				set_alarm;
				loop_edit=1;
			elif [[ press -eq 4 ]]; then
				main_loop=1;
			else
				err=1;
				loop_edit=1;
			fi			
		done
	;;
	3)
		loop=1;
		while [[ $loop -eq 1 ]]
		do
			loop=0;
			clear;
			show_alarm;
			echo 'Enter "1" for return to menu';
			error_func;
			read press;
			if [[ press -eq 1 ]]; then
				main_loop=1;
			else
				err=1;
				loop=1;
			fi
		done
	;;
	4)
		set_time_title="Remove alarm\n$(show_alarm)\nEnter time of removable alarm";
		set_time;
		remove_alarm;
		main_loop=1;
	;;
	5)
		clear;
		exit 0;
	;;
	*)
		err=1;
		main_loop=1;;
	esac
done
